// 0 tie, 1 player true, 2 player false
// 0 empty, 1 true, 2 false
EMPTY := 0;
TIE := 0;
PLAYER_A := 1;
PLAYER_B := 2;
func coord (x int, y int) int {
	return x * 3 + y;
}

func printBoard (board [9]int) {
	var y int;
	var x int;
	for x = range 0:3 {
		for y = range 0:3 {
		print (board[coord(x, y)]);
        print (" ");
		}
        println();
	}
	println ("---");
}
func full (board [9]int) bool {
    var x int;
    for x = range 0:9 {
        if board[x] == EMPTY {
            return false;
        }
    }
    return true;
}

func winner (board [9]int) int {
	var current int;
	var x int;
	var y int;
	for x = range 0:3 {
		current = board[coord(x, 0)];
		for y = range 1:3 {
			if board[coord(x, y)] != current {
				current = EMPTY;
                break;
			}
		}
		if current != EMPTY {
			return current;
		}
	}
	for y = range 0:3 {
		current = board[coord(0, y)];
		for x = range 1:3 {
			if board[coord(x, y)] != current {
				current = EMPTY;
			}
		}
		if current != EMPTY {
			return current;
		}
	}
	if board[coord(0, 0)] != 0 &&
		board[coord(0, 0)] == board[coord(1, 1)] &&
		board[coord(1, 1)] == board[coord(2, 2)] {
			return board[coord(1, 1)];
	}
	if board[coord(2, 0)] != 0 &&
		board[coord(2, 0)] == board[coord(1, 1)] &&
		board[coord(1, 1)] == board[coord(0, 2)] {
			return board[coord(1, 1)];
	}
	return TIE;
}

func opposite (x int) int { return x == PLAYER_A ? PLAYER_B : PLAYER_A; }
			
func minimax (player int, board [9]int) int
{
	var result int;
	var best int = opposite(player);
    last_board = board;
	result = winner(board);
	if result != TIE {
		return result;
    }
    if full(board) {
        return TIE;
    }
	var x int;
	var y int;
	for x = range 0:3 {
		for y = range 0:3 {
			if board[coord(x, y)] == EMPTY {
				board[coord(x, y)] = player;
				result = minimax(opposite(player), board);
				if result == player {
					return player;
				}
				if result == TIE {
					best = TIE;
				}
				board[coord(x, y)] = EMPTY;
			}
		}
	}
	return best;
}

var last_board [9]int;
var	global_board [9]int;
//board[4] = PLAYER_A;
	printBoard(global_board);
var	result int = minimax (PLAYER_A, global_board);
	println (result);

printBoard(last_board);
